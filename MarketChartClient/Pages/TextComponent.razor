@page "/labeltext"
@using  Microsoft.AspNetCore.SignalR.Client;
@inject IJSRuntime _js
@inject HttpCaller.LabelTextCaller _service;



<h3>Signal R</h3>

<div>
    <div class="container">
     
        <h5>Read label text:   
        
        <label>@ReceivedLabelText</label>
        </h5>
    <hr/>
    <div class="container">
        @_connectionStatusMessage
    </div>
</div>
</div>


@code {
    private HubConnection _hubConn;
    private string _connectionStatusMessage;
    
    public string ReceivedLabelText = "initialText";

    
    protected override async Task OnInitializedAsync()
    {
        
       // await _service.GetLabelText();
        await StartHub();

        LabelTextListener();
        await _service.GetLabelTextAsync();

    }


    private async Task StartHub()
    {
        _hubConn = new HubConnectionBuilder().WithUrl("https://localhost:7193/labelText").Build();
        await _hubConn.StartAsync();

        _connectionStatusMessage = _hubConn.State == HubConnectionState.Connected ? "Connection is established Successfully..." : "Connection is not established...";
    }

    private void LabelTextListener()
    {
        _hubConn.On<string>("SendLabelText",  data =>
        {
            ReceivedLabelText = data;
            StateHasChanged();
        });
    }
 
    public async Task Dispose() => await _hubConn.DisposeAsync();
}
